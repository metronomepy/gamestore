@model GameStore.Domain.Entities.ShippingDetails

@{
    ViewBag.Title = "GameStore: order form";
}

<h2>Checkout now</h2>
<p>Please enter your contact details and we will send the goods immediately!</p>


@using (Html.BeginForm())
{
    @Html.ValidationSummary();
    <h3>Data</h3>
    <div class="form-group">
        <label>Your name:</label>
        @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
    </div>

    <h3>Delivery address</h3>
    <div class="form-group">
        <label>1 Adress:</label>
        @Html.TextBoxFor(x => x.Line1, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>2 Adress:</label>
        @Html.TextBoxFor(x => x.Line2, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>3 Adress:</label>
        @Html.TextBoxFor(x => x.Line3, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>City:</label>
        @Html.TextBoxFor(x => x.City, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>Country:</label>
        @Html.TextBoxFor(x => x.Country, new { @class = "form-control" })
    </div>

    <h3>Options</h3>
    <div class="checkbox">
        <label>
            @Html.EditorFor(x => x.GiftWrap)
            Use gift wrapping? ?
        </label>
    </div>

    <div class="text-center">
        <input class="btn btn-primary" type="submit" value="Process order" />
    </div>
}
